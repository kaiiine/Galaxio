/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pfiches;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;

/**
 *
 * @author quent
 */
public class FAccueil extends javax.swing.JFrame {
    
    //private ImageIcon logo = new ImageIcon(getClass().getClassLoader().getResource("src/pimages/iconeGalaxio.ico"));
    private FReglementation fichReglementation;
    private FChoix ficheChoix;
    private FPlateau2 fichePlateau;
    private FVainqueur ficheVainqueur;
    private  String DOSS_IMAGES = "src/pimages/" ;
    private Timer timer;
    private Clip clip;
    private boolean musique=true;
    private String gagnant="";
    /**
     * Creates new form FAccueil
     */
    public FAccueil() {
        initComponents();
        this.setLocation(-10,0);
        this.setSize(1600,830);
        Toolkit t = Toolkit.getDefaultToolkit();
         Image im9 =t.getImage("src/pimages/iconeGalaxio.ico");
        this.setIconImage(im9);
        fichReglementation = new FReglementation(this,false);
        ficheChoix = new FChoix(this,false);
        
        
        
        lBackground.setSize(1555,817);
        Image img = t.getImage(DOSS_IMAGES+"Accueil_Galaxio.gif");
        afficher(img,lBackground);
        bJouer.setVisible(false);
        bSetting.setVisible(false);
        bQuitter.setVisible(false);
        bVolume.setVisible(false);
        
        
        
        
        
        timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                
                bJouer.setVisible(true);
                bSetting.setVisible(true);
                bQuitter.setVisible(true);
                bVolume.setVisible(true);
                Image img2 = t.getImage(DOSS_IMAGES+"Jouer.png");
                afficher(img2,bJouer);

                Image img3 = t.getImage(DOSS_IMAGES+"Règles.png");
                afficher(img3,bSetting);

                Image img4 = t.getImage(DOSS_IMAGES+"Quitter.png");
                afficher(img4,bQuitter);
                
                bVolume.setSize(75,75);
                Image img5 = t.getImage(DOSS_IMAGES+"Volume_activé.png");
                afficher(img5,bVolume);
                lBackground.setSize(1550,817);
                Image img = t.getImage(DOSS_IMAGES+"Accueil_Galaxio.png");
                afficher(img,lBackground);
                jouerSon("galaxioMusik.wav");
                
                
                
            }
        }, 2800);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bQuitter = new javax.swing.JButton();
        bJouer = new javax.swing.JButton();
        bSetting = new javax.swing.JButton();
        bVolume = new javax.swing.JButton();
        lBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        bQuitter.setBorder(null);
        bQuitter.setBorderPainted(false);
        bQuitter.setContentAreaFilled(false);
        bQuitter.setFocusPainted(false);
        bQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bQuitterActionPerformed(evt);
            }
        });
        getContentPane().add(bQuitter);
        bQuitter.setBounds(1120, 590, 330, 90);

        bJouer.setBorder(null);
        bJouer.setBorderPainted(false);
        bJouer.setContentAreaFilled(false);
        bJouer.setFocusPainted(false);
        bJouer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bJouerActionPerformed(evt);
            }
        });
        getContentPane().add(bJouer);
        bJouer.setBounds(80, 590, 340, 90);

        bSetting.setBorder(null);
        bSetting.setBorderPainted(false);
        bSetting.setContentAreaFilled(false);
        bSetting.setFocusPainted(false);
        bSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSettingActionPerformed(evt);
            }
        });
        getContentPane().add(bSetting);
        bSetting.setBounds(610, 680, 330, 90);

        bVolume.setContentAreaFilled(false);
        bVolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVolumeActionPerformed(evt);
            }
        });
        getContentPane().add(bVolume);
        bVolume.setBounds(1460, 10, 50, 50);
        getContentPane().add(lBackground);
        lBackground.setBounds(0, -20, 1690, 890);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bJouerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bJouerActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        ficheChoix.setVisible(true);
    }//GEN-LAST:event_bJouerActionPerformed

    private void bSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSettingActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        fichReglementation.setVisible(true);
    }//GEN-LAST:event_bSettingActionPerformed

    private void bQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bQuitterActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_bQuitterActionPerformed

    private void bVolumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVolumeActionPerformed
        // TODO add your handling code here:
        Toolkit t = Toolkit.getDefaultToolkit();
        FloatControl gainControl = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
        float volume = gainControl.getValue();
        if(musique){
            gainControl.setValue(volume - 60.0f);
            Image img5 = t.getImage(DOSS_IMAGES+"Volume_desactivé.png");
            afficher(img5,bVolume);
            musique=false;
        }else{
            gainControl.setValue(volume + 60.0f);
            Image img5 = t.getImage(DOSS_IMAGES+"Volume_activé.png");
            afficher(img5,bVolume);
            musique=true;
        }
    }//GEN-LAST:event_bVolumeActionPerformed

    
    
    
    
    public void afficher (Image img, JLabel monLabel){
        monLabel.setVisible(true);
        if (img !=null){
        //mise à l'échelle de l'image
        img = img.getScaledInstance(monLabel.getWidth(), monLabel.getHeight(),
        Image.SCALE_DEFAULT);
        //création d'une icône et assignation au label
        monLabel.setIcon(new ImageIcon(img));
        }
    }
    
    public void afficher (Image img, JButton monButton){
        monButton.setVisible(true);
        if (img !=null){
        //mise à l'échelle de l'image
        img = img.getScaledInstance(monButton.getWidth(), monButton.getHeight(),
        Image.SCALE_DEFAULT);
        //création d'une icône et assignation au label
        monButton.setIcon(new ImageIcon(img));
        }
    }
    
    
    public FChoix getFichChoix(){
        return ficheChoix;
    }
    
    public FPlateau2 getFichPlateau(){
        fichePlateau = new FPlateau2(this,false);
        return fichePlateau;
    }
    
    public FVainqueur getFichVainqueur(){
        ficheVainqueur = new FVainqueur(this,false);
        return ficheVainqueur;
    }
    
    public void jouerSon(String nomMusic){
        try {
            File audioFile = new File(DOSS_IMAGES+nomMusic);
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioFile);

            clip = AudioSystem.getClip();
            clip.open(audioStream);
            clip.start();

            Thread.sleep(clip.getMicrosecondLength() / 1000);
           FloatControl volumeControl = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
           
            clip.stop();
            clip.close();

        } catch (UnsupportedAudioFileException | LineUnavailableException | IOException | InterruptedException e) {
            e.printStackTrace();
        }
    }
    
    public float augmenteVolume(){
        FloatControl gainControl = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
        float volume = gainControl.getValue();
        gainControl.setValue(volume + 6.0f);
        volume = gainControl.getValue();
        return volume;
    }
    
    public float baisseVolume(){
        FloatControl gainControl = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
        float volume = gainControl.getValue();
        if(volume>-60){
            gainControl.setValue(volume - 6.0f);
        }
        volume = gainControl.getValue();
        return volume;
    }
    
    public void setGagnant(String gagnant){
        this.gagnant = gagnant;
    }
    
    public String getGagnant(){
        return this.gagnant;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FAccueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FAccueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FAccueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FAccueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FAccueil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bJouer;
    private javax.swing.JButton bQuitter;
    private javax.swing.JButton bSetting;
    private javax.swing.JButton bVolume;
    private javax.swing.JLabel lBackground;
    // End of variables declaration//GEN-END:variables
}
